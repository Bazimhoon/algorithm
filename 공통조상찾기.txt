#include<iostream>
#include<vector>
using namespace std;

const int MAX = 1100;
vector<int> vec[MAX];
int arr[2][MAX];
int arr_length[2][1];
int n, x, y;

void search(int row, int num){
  int r = 0;
  int length = 0;
  while(num != 0){
    length++;
    for(int i = 0; i <= n; i++){
      bool flag = false;
      for(int p = 0; p < vec[i].size(); p++){
        if(vec[i][p] == 0)
        break;
        
        if(vec[i][p] == num){
          flag = true;
          arr[row][r++] = i;
          num = i;
          break;
        }
        
      }
      if(flag == true)
        break;
    }
    
  }
  arr_length[row][0] = length;
  
}
int main() {

  cin >> n >> x >> y;
  
  for(int i = 0; i < n-1; i++){
    int a, b;
    cin >> a >> b;
    vec[a].push_back(b);
  }
  search(0,x);
  search(1,y);
  
  int start_point = 0;
  int start_point1 = 0;
  if(arr_length[0][0] > arr_length[1][0]){
    start_point = arr_length[0][0] - arr_length[1][0];
  }
  else{
    start_point1 = arr_length[1][0] - arr_length[0][0];
  }
  
  while(1){
    if(arr[0][start_point] == arr[1][start_point1]){
      cout << arr[0][start_point];
      break;
    }
    else{
      start_point++;
      start_point1++;
    }
    
    if(start_point >= arr_length[0][0] || start_point1 >= arr_length[1][0])
    break;

  }

  return 0;
}