#include<iostream>
#include<vector>
using namespace std;
const int MAX = 1100;

vector<int> Vertex[MAX];
vector<int> Cost[MAX];
vector<int> reverse_cost[MAX];
vector<int> reverse_vertex[MAX];
int n, m, k;
bool Check1[MAX], Check2[MAX];
int Table1[MAX], Table2[MAX];

void des_go(int home){
  
  for(int i = 1; i <= n; i++){
    Table1[i] = 4939849;
  }
  Table1[home] = 0;
  
  for(int i = 0; i < n; i++){
    int minValue = 493843;
    int minIndex = -1;
    
    for(int j = 1; j <= n; j++){
      if(!Check1[j] && Table1[j] < minValue){
        minValue = Table1[j];
        minIndex = j;
      }
    }
    Check1[minIndex] = true;
    
    for(int q = 0; q < reverse_vertex[minIndex].size(); q++){
      int num = reverse_vertex[minIndex][q];
      int cost = reverse_cost[minIndex][q];
      if(Table1[num] > Table1[minIndex] + cost)
      Table1[num] = Table1[minIndex] + cost;
    }
  }
  
}
void des_come(int home){
  
  for(int i = 1; i <= n; i++){
    Table2[i] = 4389849;
  }
  Table2[home] = 0;
  
  for(int i = 0; i< n; i++){
    int minValue = 39043;
    int minIndex = -1;
    
    for(int q = 1; q<= n; q++){
      if(!Check2[q] && minValue > Table2[q]){
        minValue = Table2[q];
        minIndex = q;
      }
    }
    Check2[minIndex] = true;
    
    for(int r = 0; r < Vertex[minIndex].size(); r++){
      int num = Vertex[minIndex][r];
      int cost = Cost[minIndex][r];
      
      if(Table2[num] > Table2[minIndex] + cost)
      Table2[num] = Table2[minIndex] + cost;
    }
  }
}
int main(){
  
  cin >> n >> m >> k;
  for(int i = 0; i < m; i++){
    int a,b,c;
    
    cin >> a >> b >> c;
    
    Vertex[a].push_back(b);
    reverse_vertex[b].push_back(a);
    Cost[a].push_back(c);
    reverse_cost[b].push_back(c);
    
  }
  des_go(k);
  des_come(k);
  
  int sum = 0;
  
  // for(int i = 1; i<=n; i++){
  //   cout << Table1[i] << " ";
  // }
  // cout << endl;
  // for(int i = 1; i<=n; i++){
  //   cout << Table2[i] << " ";
  // }
  // cout << endl;
  for(int i = 1; i <= n; i++){
    sum += Table1[i] + Table2[i];
  }
  cout << sum;
  
  return 0;
}