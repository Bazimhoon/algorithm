#include<iostream>
#include<stack>
using namespace std;

const int MAX = 110000;
int arr[MAX];
stack<int> st;

int main() {
	int n;
	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> arr[i];
	}
	int idx = 0;
	int area = 0;
	int maxarea = -43432;
	while (idx < n) {
		if (st.empty()) {//스택이 비었으면
			st.push(idx);
			idx++;
		}
		else {//스택이 차있으면
			if (arr[st.top()] <= arr[idx]) {//현재 스택의 탑의 크기보다 앞으로 들어올 크기가 크거나 같다면
				st.push(idx); //스택에다가 그 탑의 위치를 저장해라
				idx++;
			}
			else {//현재 스택의 탑의 크기보다 앞으로 들어올 크기가 작다면
				int top = arr[st.top()];
				st.pop();
				if (st.empty()) {
					area = top * idx;
				}
				else {
					area = top * (idx - st.top() - 1);
				}
			}
		}
		if (maxarea < area)
			maxarea = area;
	}
	while (!st.empty()) {
		int top = arr[st.top()];
		st.pop();
		if (st.empty()) {
			area = top * idx;
		}
		else {
			area = top * (idx - st.top() - 1);
		}

		if (maxarea < area)
			maxarea = area;
	}
	cout << maxarea;
	return 0;
}